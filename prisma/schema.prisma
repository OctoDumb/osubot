generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Ban {
  id         Int     @id @default(autoincrement())
  userId     Int
  until      Int
  reason     String?

  @@map("bans")
}

model Cover {
  id         Int @id
  attachment String?

  @@map("covers")
}

model ServerConnection {
  id       Int    @id @default(autoincrement())
  server   String
  userId   Int
  playerId Int
  nickname String
  mode     Int    @default(0)

  @@map("connections")
}

model NewsRules {
  id      Int     @id @default(autoincrement())
  peerId  Int
  type    String
  enabled Boolean @default(false)
  filters String  @default("")

  @@map("newsrules")
}

model Notification {
  id        Int     @id @default(autoincrement())
  userId    Int
  message   String
  delivered Boolean @default(false)

  @@map("notifications")
}

model Role {
  id          Int    @id @default(autoincrement())
  name        String
  permissions String @default("")

  @@map("roles")
}

model Stats {
  id       Int    @id @default(autoincrement())
  server   String
  playerId Int
  mode     Int
  rank     Int    @default(9999999)
  pp       Float  @default(0)
  accuracy Float  @default(100)

  @@map("stats")
}

model Status {
  id          Int    @id @default(autoincrement())
  name        String
  emoji       String
  description String

  @@map("statuses")
}

model StatusOwned {
  id       Int    @id @default(autoincrement())
  userId   Int
  statusId Int

  @@map("statusesowned")
}

model User {
  id       Int     @id
  role     Role    @relation(fields: [roleId], references: [id])
  roleId   Int     @default(1)
  statusId Int?

  @@map("users")
}
